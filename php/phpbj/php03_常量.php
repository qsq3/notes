<?php
/**
常量(constant)是指在程序中无法修改的值, 因此在声明时赋值;
1. 使用函数声明;
2. 如果常量没有声明,则常量名在使用时,会自动转为字符串,但会使效率降低;
3. 常量名称前不要加$符号;
4. 和变量一样, 常量名称默认区分大小写,习惯上常量为全部大写;
5. 可以使用 define() 的第三个参数(默认false,区分)(true为不区分)来决定是否要区分大小写;
6. 除了变量和常量, 其他php元素都不区分大小写;
7. 常量的值只支持标量类型;
8. 常量不能使用unset()来清除
9. 可以使用 defined() 来判断常量是否存在;
10. 常量是全局的;
11. 可以用constant() 来读取常量的值, 一般用于 常量名是被拼接出来 的情况
12  用 get_defined_constants() 来获取所有已定义常量的列表;

    //error_reporting(E_ALL & ~E_NOTICE); //报告所有错误,除了注意

    //$root = "localhost";         //声明变量
    define("ROOT","10",true);  //声明常量

    echo ROOT + 10 , "<br/>";  //可以拿来运算,和变量一样被利用;
    echo root, "<br/>";  
    if(defined('a')){
        print("存在<br/>");
    } else {
        print("不存在<br/>");
    }
    echo constant("root") , "<br/>"; 
    //var_dump(get_defined_constants(),"<br/>");

//预定义常量:
    echo M_PI;
    
*/

/*魔术常量:
__LINE__ 文件中的当前行号。  
__FILE__ 文件的完整路径和文件名。如果用在被包含文件中，则返回被包含的文件名。自 PHP 4.0.2 起，__FILE__ 总是包含一个绝对路径（如果是符号连接，则是解析后的绝对路径），而在此之前的版本有时会包含一个相对路径。  
__DIR__ 文件所在的目录。如果用在被包括文件中，则返回被包括的文件所在的目录。它等价于 dirname(__FILE__)。除非是根目录，否则目录中名不包括末尾的斜杠。（PHP 5.3.0中新增） =  
__FUNCTION__ 函数名称（PHP 4.3.0 新加）。自 PHP 5 起本常量返回该函数被定义时的名字（区分大小写）。在 PHP 4 中该值总是小写字母的。  
__CLASS__ 类的名称（PHP 4.3.0 新加）。自 PHP 5 起本常量返回该类被定义时的名字（区分大小写）。在 PHP 4 中该值总是小写字母的。类名包括其被声明的作用区域（例如 Foo\Bar）。注意自 PHP 5.4 起 __CLASS__ 对 trait 也起作用。当用在 trait 方法中时，__CLASS__ 是调用 trait 方法的类的名字。  
__TRAIT__ Trait 的名字（PHP 5.4.0 新加）。自 PHP 5.4 起此常量返回 trait 被定义时的名字（区分大小写）。Trait 名包括其被声明的作用区域（例如 Foo\Bar）。  
__METHOD__ 类的方法名（PHP 5.0.0 新加）。返回该方法被定义时的名字（区分大小写）。  
__NAMESPACE__ 当前命名空间的名称（区分大小写）。此常量是在编译时定义的（PHP 5.3.0 新增）。  
 
*/
    echo  __LINE__;

